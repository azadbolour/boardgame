
#
# Base of boardgame development.
#

#
# Begin with ubuntu version 14.04.
#
FROM ubuntu:trusty
RUN whoami
RUN apt-get update


#
# Get basic untilities.
#
RUN apt-get install -y dialog apt-utils wget curl software-properties-common python-software-properties zip unzip build-essential

RUN add-apt-repository ppa:openjdk-r/ppa \
  && apt-get update \
  && apt-get install -y openjdk-8-jdk && java -version


ENV CA_CERTIFICATES_JAVA_VERSION 20170531+nmu1
RUN /var/lib/dpkg/info/ca-certificates-java.postinst configure

#
# Install git.
#
RUN apt-get install -y git && which git

#
# Set up the base environment.
#
ENV WORKSPACE /home/me/dev/boardgame
RUN mkdir -p $WORKSPACE
WORKDIR $WORKSPACE
RUN echo `pwd`
ENV PATH $PATH:.
RUN echo $PATH

#
# Install node js version 7.
#
RUN apt-get update
RUN curl -sL https://deb.nodesource.com/setup_9.x | bash -
# RUN curl -sL https://raw.githubusercontent.com/nodesource/distributions/master/deb/setup_7.x | bash -
RUN apt-get update
RUN apt-get install -y apt-utils
RUN apt-get install -y nodejs

#
# Clone the repository.
#
RUN cd .. && git clone https://github.com/azadbolour/boardgame 

#
# Install the web-ui dependencies.
#
RUN cd web-ui && npm install -g eslint && npm install -g jsdoc
RUN cd web-ui && npm install

#
# Bundle up the javascript.
#
RUN cd web-ui && ./build-prod.sh

# Note. On Jan 14 2018 sbt could not be authenticated, though the above is the documented manner
# of installing sbt 1.x as per http://www.scala-sbt.org/1.x/docs/Installing-sbt-on-Linux.html.

#
# Install SBT
#
# RUN echo "deb https://dl.bintray.com/sbt/debian /" | tee -a /etc/apt/sources.list.d/sbt.list \
#  && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823 \
#  && apt-get update \
#  && apt-get -y install sbt

#
# Install sbt from the official DEB package.
#
RUN wget --quiet https://dl.bintray.com/sbt/debian/sbt-1.1.0.deb \
    && dpkg -i sbt-1.1.0.deb

#
# Package the scala server
#
RUN cd scala-server \
  && update-ui-bundle.sh \
  && package.sh 
  
#  && deploy.sh


