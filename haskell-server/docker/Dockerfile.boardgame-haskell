
#
# Runs the boardgame executable - built from the latest source.
#

#
# Command line arguments.
#

# The docker tag.
ARG tag=0.9
#

#
# Base it on the same-tagged base.
#
FROM azadbolour/boardgame-haskell-packager:${tag}

#
# Set up the base environment.
#
ENV WORKSPACE /home/me/dev/boardgame
WORKDIR $WORKSPACE
RUN echo `pwd` && ls
ENV PATH $PATH:.
RUN echo $PATH

# 
# Get the lastest source.
#
RUN git pull origin master

#
# Update web-ui node js dependencies.
#
RUN cd web-ui && npm install

#
# Bundle up the javascript.
#
RUN cd web-ui && ./build-prod.sh

#
# Build the Haskell server.
#
RUN cd haskell-server && stack build

#
# Run the test suite using the sqlite database.
# Tests migrate the database and recreate the data they need.
#
RUN cd haskell-server/test-data && cp sqlite-config.yml test-config.yml
RUN cd haskell-server && stack test

#
# Copy the web-ui bundle to the Haskell server's static files directory.
#
RUN cd haskell-server && ./update-ui-bundle.sh

#
# Unzip the dictionary masked words file.
#
RUN cd dict && unzip moby-english-masked-words.txt.zip

#
# Expose the http port. Do it in the run command.
#
# EXPOSE ${serverPort}

ENTRYPOINT ["/home/me/dev/boardgame/haskell-server/cd-run.sh", "/home/me/dev/boardgame/haskell-server", "test-data/sqlite-config.yml"]
