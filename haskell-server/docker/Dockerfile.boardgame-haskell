
#
# Runs the boardgame executable - built from the latest source.
#

#
# Command line arguments.
#

# The version of the base idocker image to use.
ARG version=no_version
#

#
# Base it on the same-tagged base.
#
FROM azadbolour/boardgame-haskell-base:${version}

#
# Set up the base environment.
#  The project directory is expected to have been creaed in the base image.
#
ENV WORKSPACE /home/me/dev/boardgame
WORKDIR $WORKSPACE
ENV PATH $PATH:.
RUN echo `pwd` && ls && echo $PATH

# 
# Get the latest source.
#
RUN git pull origin master

#
# Update web-ui node js dependencies and bundle the ui code.
#
RUN cd web-ui \
  && npm install
  && ./bundle-prod.sh

#
# Unzip the dictionary masked words file to make it available to the server.
#
RUN cd dict \
  && unzip moby-english-masked-words.txt.zip

#
# Build and test the Haskell server.
# Copy the ui bundle to from the ui sub-project to the server's static directory.
# Tests migrate the database and recreate the data they need.
#
RUN cd haskell-server \
  && stack build \
  && ./update-ui-bundle.sh \
  && cp test-data/sqlite-config.yl test-data/test-config.yml \
  && stack test

#
# Run the haskell server from the haskell-server directory.
#
WORKDIR $WORKSPACE/haskell-server
ENTRYPOINT ["run.sh", "test-data/sqlite-config.yml"]

